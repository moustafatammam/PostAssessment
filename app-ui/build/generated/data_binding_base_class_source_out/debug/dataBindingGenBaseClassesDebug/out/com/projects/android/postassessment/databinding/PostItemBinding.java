// Generated by data binding compiler. Do not edit!
package com.projects.android.postassessment.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.chauthai.swipereveallayout.SwipeRevealLayout;
import com.projects.android.postassessment.R;
import com.projects.android.postassessment.model.ViewPost;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class PostItemBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout constraintItemLayout;

  @NonNull
  public final ImageButton deletePostButton;

  @NonNull
  public final ImageButton editPostButton;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView itemListHandle;

  @NonNull
  public final TextView postBody;

  @NonNull
  public final TextView postTitle;

  @NonNull
  public final SwipeRevealLayout swipeReveal;

  @Bindable
  protected ViewPost mViewpost;

  protected PostItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout constraintItemLayout, ImageButton deletePostButton,
      ImageButton editPostButton, Guideline guideline, ImageView itemListHandle, TextView postBody,
      TextView postTitle, SwipeRevealLayout swipeReveal) {
    super(_bindingComponent, _root, _localFieldCount);
    this.constraintItemLayout = constraintItemLayout;
    this.deletePostButton = deletePostButton;
    this.editPostButton = editPostButton;
    this.guideline = guideline;
    this.itemListHandle = itemListHandle;
    this.postBody = postBody;
    this.postTitle = postTitle;
    this.swipeReveal = swipeReveal;
  }

  public abstract void setViewpost(@Nullable ViewPost viewpost);

  @Nullable
  public ViewPost getViewpost() {
    return mViewpost;
  }

  @NonNull
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.post_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<PostItemBinding>inflateInternal(inflater, R.layout.post_item, root, attachToRoot, component);
  }

  @NonNull
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.post_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<PostItemBinding>inflateInternal(inflater, R.layout.post_item, null, false, component);
  }

  public static PostItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static PostItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (PostItemBinding)bind(component, view, R.layout.post_item);
  }
}
